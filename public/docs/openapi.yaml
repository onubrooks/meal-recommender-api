openapi: 3.0.3
info:
  title: 'Onubrooks'' Meal Recommender API'
  description: 'A fast and simple API that supplies meal recommendations for users with allergies. The API supports meals, items, users and allergies.'
  version: 1.0.0
servers:
  -
    url: 'https://meal-recommender-api.herokuapp.com'
paths:
  /api/meals:
    post:
      summary: 'Add/Create/Update a Meal'
      description: 'Create or update a meal record, supplying the name and description to be saved.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'save meal successful'
                  data:
                    id: 6
                    name: 'Grilled Fish with Spice Chilli'
                    description: 'This is the description'
                    created_at: '2021-08-05T14:16:49.000000Z'
                    updated_at: '2021-08-05T14:16:49.000000Z'
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'save meal successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 6
                      name: 'Grilled Fish with Spice Chilli'
                      description: 'This is the description'
                      created_at: '2021-08-05T14:16:49.000000Z'
                      updated_at: '2021-08-05T14:16:49.000000Z'
                    description: 'Meal record just created or updated.'
      tags:
        - 'Data Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the meal.'
                  example: 'Grilled Fish with Spice Chilli'
                description:
                  type: string
                  description: 'Brief description.'
                  example: 'This is the description'
      security: []
    get:
      summary: 'Fetch Meals'
      description: "Fetch a paginated list of all the meals in the recommender. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch meals successful'
                  data:
                    -
                      id: 1
                      name: 'Eba and Ewedu'
                      description: 'special eba from the western part of Nigeria'
                      created_at: '2021-08-04T22:40:03.000000Z'
                      updated_at: '2021-08-04T22:40:03.000000Z'
                      items:
                        -
                          id: 1
                          name: Ewedu
                          description: 'Ewedu soup'
                          pivot:
                            meal_id: 1
                            item_id: 1
                        -
                          id: 11
                          name: Eba
                          description: 'delicious swallow'
                          pivot:
                            meal_id: 1
                            item_id: 11
                    -
                      id: 2
                      name: 'fufu and Ewedu'
                      description: 'special fufu from the eastern part of Nigeria'
                      created_at: '2021-08-04T22:41:45.000000Z'
                      updated_at: '2021-08-04T22:41:45.000000Z'
                      items:
                        -
                          id: 1
                          name: Ewedu
                          description: 'Ewedu soup'
                          pivot:
                            meal_id: 2
                            item_id: 1
                        -
                          id: 3
                          name: Fufu
                          description: 'exotic swallow'
                          pivot:
                            meal_id: 2
                            item_id: 3
                    -
                      id: 3
                      name: 'akpu and Ewedu'
                      description: 'special akpu from the eastern part of Nigeria'
                      created_at: '2021-08-04T22:42:00.000000Z'
                      updated_at: '2021-08-04T22:42:00.000000Z'
                      items: []
                    -
                      id: 4
                      name: 'pounded yam and Ewedu'
                      description: 'special pounded yam from the southern part of Nigeria'
                      created_at: '2021-08-04T22:42:25.000000Z'
                      updated_at: '2021-08-04T22:42:25.000000Z'
                      items: []
                    -
                      id: 5
                      name: 'Eba and Okra'
                      description: 'special garri cake with okra soup'
                      created_at: '2021-08-04T22:56:07.000000Z'
                      updated_at: '2021-08-04T22:56:07.000000Z'
                      items: []
                    -
                      id: 6
                      name: 'Grilled Fish with Spice Chilli'
                      description: 'This is the description'
                      created_at: '2021-08-05T14:16:49.000000Z'
                      updated_at: '2021-08-05T14:16:49.000000Z'
                      items: []
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch meals successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Eba and Ewedu'
                        description: 'special eba from the western part of Nigeria'
                        created_at: '2021-08-04T22:40:03.000000Z'
                        updated_at: '2021-08-04T22:40:03.000000Z'
                        items:
                          -
                            id: 1
                            name: Ewedu
                            description: 'Ewedu soup'
                            pivot:
                              meal_id: 1
                              item_id: 1
                          -
                            id: 11
                            name: Eba
                            description: 'delicious swallow'
                            pivot:
                              meal_id: 1
                              item_id: 11
                      -
                        id: 2
                        name: 'fufu and Ewedu'
                        description: 'special fufu from the eastern part of Nigeria'
                        created_at: '2021-08-04T22:41:45.000000Z'
                        updated_at: '2021-08-04T22:41:45.000000Z'
                        items:
                          -
                            id: 1
                            name: Ewedu
                            description: 'Ewedu soup'
                            pivot:
                              meal_id: 2
                              item_id: 1
                          -
                            id: 3
                            name: Fufu
                            description: 'exotic swallow'
                            pivot:
                              meal_id: 2
                              item_id: 3
                      -
                        id: 3
                        name: 'akpu and Ewedu'
                        description: 'special akpu from the eastern part of Nigeria'
                        created_at: '2021-08-04T22:42:00.000000Z'
                        updated_at: '2021-08-04T22:42:00.000000Z'
                        items: []
                      -
                        id: 4
                        name: 'pounded yam and Ewedu'
                        description: 'special pounded yam from the southern part of Nigeria'
                        created_at: '2021-08-04T22:42:25.000000Z'
                        updated_at: '2021-08-04T22:42:25.000000Z'
                        items: []
                      -
                        id: 5
                        name: 'Eba and Okra'
                        description: 'special garri cake with okra soup'
                        created_at: '2021-08-04T22:56:07.000000Z'
                        updated_at: '2021-08-04T22:56:07.000000Z'
                        items: []
                      -
                        id: 6
                        name: 'Grilled Fish with Spice Chilli'
                        description: 'This is the description'
                        created_at: '2021-08-05T14:16:49.000000Z'
                        updated_at: '2021-08-05T14:16:49.000000Z'
                        items: []
                    description: 'List of meals queried from the API.'
                    items:
                      type: object
      tags:
        - 'Data Management'
      security: []
  /api/allergies:
    post:
      summary: 'Add/Create/Update an Allergy'
      description: 'Create or update an allergy record, supplying the name and description to be saved.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'cannot create allergy, only 3 allergies are currently supported'
                  errors: []
                properties:
                  status:
                    type: string
                    example: error
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'cannot create allergy, only 3 allergies are currently supported'
                    description: 'The service message based on the status of the call.'
                  errors:
                    type: array
                    example: []
      tags:
        - 'Data Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the allergy.'
                  example: 'Fish Allergy'
                description:
                  type: string
                  description: 'Brief description of the allergy.'
                  example: 'Allergic to fish!'
      security: []
    get:
      summary: 'Fetch Allergies'
      description: "Fetch a paginated list of all the allergies in the recommender. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch allergies successful'
                  data:
                    -
                      id: 1
                      name: 'Nut Allergy'
                      description: 'Allergic to nuts'
                      created_at: '2021-08-04T22:51:03.000000Z'
                      updated_at: '2021-08-04T22:51:03.000000Z'
                    -
                      id: 2
                      name: 'ShellFish Allergy'
                      description: 'Allergic to ShellFish'
                      created_at: '2021-08-04T22:51:18.000000Z'
                      updated_at: '2021-08-04T22:51:18.000000Z'
                    -
                      id: 3
                      name: 'SeaFood Allergy'
                      description: 'Allergic to SeaFood'
                      created_at: '2021-08-04T22:51:36.000000Z'
                      updated_at: '2021-08-04T22:51:36.000000Z'
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch allergies successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Nut Allergy'
                        description: 'Allergic to nuts'
                        created_at: '2021-08-04T22:51:03.000000Z'
                        updated_at: '2021-08-04T22:51:03.000000Z'
                      -
                        id: 2
                        name: 'ShellFish Allergy'
                        description: 'Allergic to ShellFish'
                        created_at: '2021-08-04T22:51:18.000000Z'
                        updated_at: '2021-08-04T22:51:18.000000Z'
                      -
                        id: 3
                        name: 'SeaFood Allergy'
                        description: 'Allergic to SeaFood'
                        created_at: '2021-08-04T22:51:36.000000Z'
                        updated_at: '2021-08-04T22:51:36.000000Z'
                    description: 'List of allergies queried from the API.'
                    items:
                      type: object
      tags:
        - 'Data Management'
      security: []
  /api/items:
    post:
      summary: 'Add/Create/Update an Item'
      description: 'Create or update an item record, supplying the name and description to be saved.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'save item successful'
                  data:
                    id: 12
                    name: 'Roast Fish'
                    description: 'fish roasted with hot fire'
                    created_at: '2021-08-05T14:16:49.000000Z'
                    updated_at: '2021-08-05T14:16:49.000000Z'
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'save item successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 12
                      name: 'Roast Fish'
                      description: 'fish roasted with hot fire'
                      created_at: '2021-08-05T14:16:49.000000Z'
                      updated_at: '2021-08-05T14:16:49.000000Z'
                    description: 'Item record just created or updated.'
      tags:
        - 'Data Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the item.'
                  example: 'Roast Fish'
                description:
                  type: string
                  description: 'Brief description of the item.'
                  example: 'fish roasted with hot fire'
      security: []
    get:
      summary: 'Fetch Items'
      description: "Fetch a paginated list of all the items in the recommender. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch items successful'
                  data:
                    -
                      id: 1
                      name: Ewedu
                      description: 'Ewedu soup'
                      created_at: '2021-08-04T22:45:11.000000Z'
                      updated_at: '2021-08-04T22:45:11.000000Z'
                      allergies:
                        -
                          id: 1
                          name: 'Nut Allergy'
                          description: 'Allergic to nuts'
                          pivot:
                            item_id: 1
                            allergy_id: 1
                    -
                      id: 2
                      name: 'Pounded Yam'
                      description: 'Yam that is pounded'
                      created_at: '2021-08-04T22:45:30.000000Z'
                      updated_at: '2021-08-04T22:45:30.000000Z'
                      allergies:
                        -
                          id: 2
                          name: 'ShellFish Allergy'
                          description: 'Allergic to ShellFish'
                          pivot:
                            item_id: 2
                            allergy_id: 2
                    -
                      id: 3
                      name: Fufu
                      description: 'exotic swallow'
                      created_at: '2021-08-04T22:45:46.000000Z'
                      updated_at: '2021-08-04T22:45:46.000000Z'
                      allergies:
                        -
                          id: 2
                          name: 'ShellFish Allergy'
                          description: 'Allergic to ShellFish'
                          pivot:
                            item_id: 3
                            allergy_id: 2
                        -
                          id: 3
                          name: 'SeaFood Allergy'
                          description: 'Allergic to SeaFood'
                          pivot:
                            item_id: 3
                            allergy_id: 3
                    -
                      id: 4
                      name: Akpu
                      description: 'exotic swallow with a spice to it'
                      created_at: '2021-08-04T22:45:59.000000Z'
                      updated_at: '2021-08-04T22:45:59.000000Z'
                      allergies: []
                    -
                      id: 5
                      name: 'Oha soup'
                      description: 'exotic soup with a bling to it'
                      created_at: '2021-08-04T22:46:16.000000Z'
                      updated_at: '2021-08-04T22:46:16.000000Z'
                      allergies: []
                    -
                      id: 6
                      name: 'Edikaikong soup'
                      description: 'exotic soup everyone wants but cant have'
                      created_at: '2021-08-04T22:46:39.000000Z'
                      updated_at: '2021-08-04T22:46:39.000000Z'
                      allergies: []
                    -
                      id: 7
                      name: 'Boiled rice'
                      description: 'rice grain boiled'
                      created_at: '2021-08-04T22:47:01.000000Z'
                      updated_at: '2021-08-04T22:47:01.000000Z'
                      allergies: []
                    -
                      id: 8
                      name: 'Fried rice'
                      description: 'rice grain fried'
                      created_at: '2021-08-04T22:47:10.000000Z'
                      updated_at: '2021-08-04T22:47:10.000000Z'
                      allergies: []
                    -
                      id: 9
                      name: 'Jollof rice'
                      description: 'rice grain jollof'
                      created_at: '2021-08-04T22:47:22.000000Z'
                      updated_at: '2021-08-04T22:47:22.000000Z'
                      allergies: []
                    -
                      id: 10
                      name: 'Okra soup'
                      description: 'delicious soup made with the great okra plant'
                      created_at: '2021-08-04T22:56:45.000000Z'
                      updated_at: '2021-08-04T22:56:45.000000Z'
                      allergies: []
                    -
                      id: 11
                      name: Eba
                      description: 'delicious swallow'
                      created_at: '2021-08-04T23:16:05.000000Z'
                      updated_at: '2021-08-04T23:16:05.000000Z'
                      allergies: []
                    -
                      id: 12
                      name: 'Roast Fish'
                      description: 'fish roasted with hot fire'
                      created_at: '2021-08-05T14:16:49.000000Z'
                      updated_at: '2021-08-05T14:16:49.000000Z'
                      allergies: []
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch items successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Ewedu
                        description: 'Ewedu soup'
                        created_at: '2021-08-04T22:45:11.000000Z'
                        updated_at: '2021-08-04T22:45:11.000000Z'
                        allergies:
                          -
                            id: 1
                            name: 'Nut Allergy'
                            description: 'Allergic to nuts'
                            pivot:
                              item_id: 1
                              allergy_id: 1
                      -
                        id: 2
                        name: 'Pounded Yam'
                        description: 'Yam that is pounded'
                        created_at: '2021-08-04T22:45:30.000000Z'
                        updated_at: '2021-08-04T22:45:30.000000Z'
                        allergies:
                          -
                            id: 2
                            name: 'ShellFish Allergy'
                            description: 'Allergic to ShellFish'
                            pivot:
                              item_id: 2
                              allergy_id: 2
                      -
                        id: 3
                        name: Fufu
                        description: 'exotic swallow'
                        created_at: '2021-08-04T22:45:46.000000Z'
                        updated_at: '2021-08-04T22:45:46.000000Z'
                        allergies:
                          -
                            id: 2
                            name: 'ShellFish Allergy'
                            description: 'Allergic to ShellFish'
                            pivot:
                              item_id: 3
                              allergy_id: 2
                          -
                            id: 3
                            name: 'SeaFood Allergy'
                            description: 'Allergic to SeaFood'
                            pivot:
                              item_id: 3
                              allergy_id: 3
                      -
                        id: 4
                        name: Akpu
                        description: 'exotic swallow with a spice to it'
                        created_at: '2021-08-04T22:45:59.000000Z'
                        updated_at: '2021-08-04T22:45:59.000000Z'
                        allergies: []
                      -
                        id: 5
                        name: 'Oha soup'
                        description: 'exotic soup with a bling to it'
                        created_at: '2021-08-04T22:46:16.000000Z'
                        updated_at: '2021-08-04T22:46:16.000000Z'
                        allergies: []
                      -
                        id: 6
                        name: 'Edikaikong soup'
                        description: 'exotic soup everyone wants but cant have'
                        created_at: '2021-08-04T22:46:39.000000Z'
                        updated_at: '2021-08-04T22:46:39.000000Z'
                        allergies: []
                      -
                        id: 7
                        name: 'Boiled rice'
                        description: 'rice grain boiled'
                        created_at: '2021-08-04T22:47:01.000000Z'
                        updated_at: '2021-08-04T22:47:01.000000Z'
                        allergies: []
                      -
                        id: 8
                        name: 'Fried rice'
                        description: 'rice grain fried'
                        created_at: '2021-08-04T22:47:10.000000Z'
                        updated_at: '2021-08-04T22:47:10.000000Z'
                        allergies: []
                      -
                        id: 9
                        name: 'Jollof rice'
                        description: 'rice grain jollof'
                        created_at: '2021-08-04T22:47:22.000000Z'
                        updated_at: '2021-08-04T22:47:22.000000Z'
                        allergies: []
                      -
                        id: 10
                        name: 'Okra soup'
                        description: 'delicious soup made with the great okra plant'
                        created_at: '2021-08-04T22:56:45.000000Z'
                        updated_at: '2021-08-04T22:56:45.000000Z'
                        allergies: []
                      -
                        id: 11
                        name: Eba
                        description: 'delicious swallow'
                        created_at: '2021-08-04T23:16:05.000000Z'
                        updated_at: '2021-08-04T23:16:05.000000Z'
                        allergies: []
                      -
                        id: 12
                        name: 'Roast Fish'
                        description: 'fish roasted with hot fire'
                        created_at: '2021-08-05T14:16:49.000000Z'
                        updated_at: '2021-08-05T14:16:49.000000Z'
                        allergies: []
                    description: 'List of items queried from the API.'
                    items:
                      type: object
      tags:
        - 'Data Management'
      security: []
  /api/users:
    post:
      summary: 'Add/Create/Update a User'
      description: 'Create or update a user record, supplying the name, email and password to be saved.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'save user successful'
                  data:
                    id: 3
                    name: 'Idris Elba'
                    email: elba@onubrooks.io
                    email_verified_at: null
                    created_at: '2021-08-05T14:16:50.000000Z'
                    updated_at: '2021-08-05T14:19:28.000000Z'
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'save user successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 3
                      name: 'Idris Elba'
                      email: elba@onubrooks.io
                      email_verified_at: null
                      created_at: '2021-08-05T14:16:50.000000Z'
                      updated_at: '2021-08-05T14:19:28.000000Z'
                    description: 'User record just created or updated.'
      tags:
        - 'Data Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'Idris Elba'
                email:
                  type: string
                  description: 'User email.'
                  example: elba@onubrooks.io
                password:
                  type: string
                  description: 'User password.'
                  example: password
                password_confirmation:
                  type: string
                  description: 'Password confirmation.'
                  example: password
      security: []
    get:
      summary: 'Fetch Users'
      description: "Fetch a paginated list of all the users in the recommender. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch users successful'
                  data:
                    -
                      id: 1
                      name: 'Brad Pitt'
                      email: pit@onubrooksapi.com
                      email_verified_at: null
                      created_at: '2021-08-04T22:55:02.000000Z'
                      updated_at: '2021-08-04T22:55:10.000000Z'
                      allergies:
                        -
                          id: 3
                          name: 'SeaFood Allergy'
                          description: 'Allergic to SeaFood'
                          created_at: '2021-08-04T22:51:36.000000Z'
                          updated_at: '2021-08-04T22:51:36.000000Z'
                          pivot:
                            user_id: 1
                            allergy_id: 3
                        -
                          id: 1
                          name: 'Nut Allergy'
                          description: 'Allergic to nuts'
                          created_at: '2021-08-04T22:51:03.000000Z'
                          updated_at: '2021-08-04T22:51:03.000000Z'
                          pivot:
                            user_id: 1
                            allergy_id: 1
                    -
                      id: 2
                      name: 'Harvey Specter'
                      email: harvey@onubrooksapi.com
                      email_verified_at: null
                      created_at: '2021-08-05T09:01:54.000000Z'
                      updated_at: '2021-08-05T09:01:54.000000Z'
                      allergies:
                        -
                          id: 2
                          name: 'ShellFish Allergy'
                          description: 'Allergic to ShellFish'
                          created_at: '2021-08-04T22:51:18.000000Z'
                          updated_at: '2021-08-04T22:51:18.000000Z'
                          pivot:
                            user_id: 2
                            allergy_id: 2
                    -
                      id: 3
                      name: 'Idris Elba'
                      email: elba@onubrooks.io
                      email_verified_at: null
                      created_at: '2021-08-05T14:16:50.000000Z'
                      updated_at: '2021-08-05T14:16:50.000000Z'
                      allergies: []
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch users successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Brad Pitt'
                        email: pit@onubrooksapi.com
                        email_verified_at: null
                        created_at: '2021-08-04T22:55:02.000000Z'
                        updated_at: '2021-08-04T22:55:10.000000Z'
                        allergies:
                          -
                            id: 3
                            name: 'SeaFood Allergy'
                            description: 'Allergic to SeaFood'
                            created_at: '2021-08-04T22:51:36.000000Z'
                            updated_at: '2021-08-04T22:51:36.000000Z'
                            pivot:
                              user_id: 1
                              allergy_id: 3
                          -
                            id: 1
                            name: 'Nut Allergy'
                            description: 'Allergic to nuts'
                            created_at: '2021-08-04T22:51:03.000000Z'
                            updated_at: '2021-08-04T22:51:03.000000Z'
                            pivot:
                              user_id: 1
                              allergy_id: 1
                      -
                        id: 2
                        name: 'Harvey Specter'
                        email: harvey@onubrooksapi.com
                        email_verified_at: null
                        created_at: '2021-08-05T09:01:54.000000Z'
                        updated_at: '2021-08-05T09:01:54.000000Z'
                        allergies:
                          -
                            id: 2
                            name: 'ShellFish Allergy'
                            description: 'Allergic to ShellFish'
                            created_at: '2021-08-04T22:51:18.000000Z'
                            updated_at: '2021-08-04T22:51:18.000000Z'
                            pivot:
                              user_id: 2
                              allergy_id: 2
                      -
                        id: 3
                        name: 'Idris Elba'
                        email: elba@onubrooks.io
                        email_verified_at: null
                        created_at: '2021-08-05T14:16:50.000000Z'
                        updated_at: '2021-08-05T14:16:50.000000Z'
                        allergies: []
                    description: 'List of users queried from the API.'
                    items:
                      type: object
      tags:
        - 'Data Management'
      security: []
  /api/meal-items:
    post:
      summary: 'Add/Create/Update Meal-Items'
      description: 'Create or update one or more ''meal-item'' record, supplying the meal_id and a list of items to be saved.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    items:
                      - 'The items field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                    description: 'The service message based on the status of the call.'
                  errors:
                    type: object
                    example:
                      items:
                        - 'The items field is required.'
      tags:
        - 'Data Relationship Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                meal_id:
                  type: integer
                  description: 'Identifier of the meal.'
                  example: 6
                items:
                  type: array
                  description: 'A list of items that are part of the meal.'
                  example:
                    - []
                    - []
                  items:
                    type: object
      security: []
  /api/item-allergies:
    post:
      summary: 'Add/Create/Update Item-Allergies'
      description: 'Create or update one or more ''item-allergies'' record, supplying the item_id and a list of allergies to be saved.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'save item-allergies successful'
                  data:
                    id: 12
                    name: 'Roast Fish'
                    description: 'fish roasted with hot fire'
                    created_at: '2021-08-05T14:16:49.000000Z'
                    updated_at: '2021-08-05T14:16:49.000000Z'
                    allergies:
                      -
                        id: 1
                        name: 'Nut Allergy'
                        description: 'Allergic to nuts'
                        pivot:
                          item_id: 12
                          allergy_id: 1
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'save item-allergies successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 12
                      name: 'Roast Fish'
                      description: 'fish roasted with hot fire'
                      created_at: '2021-08-05T14:16:49.000000Z'
                      updated_at: '2021-08-05T14:16:49.000000Z'
                      allergies:
                        -
                          id: 1
                          name: 'Nut Allergy'
                          description: 'Allergic to nuts'
                          pivot:
                            item_id: 12
                            allergy_id: 1
                    description: '''Item-Allergies'' record just created or updated.'
      tags:
        - 'Data Relationship Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: integer
                  description: 'Identifier of the item.'
                  example: 12
                allergies:
                  type: array
                  description: 'A list of allergies that are in the item.'
                  example:
                    -
                      allergy_id: 1
                  items:
                    type: object
      security: []
  /api/user-allergies:
    post:
      summary: 'Add/Create/Update User-Allergies'
      description: 'Create or update one or more ''user-allergies'' record, supplying the user_id and list of allergies to be saved.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'save user allergies successful'
                  data:
                    id: 3
                    name: 'Idris Elba'
                    email: elba@onubrooks.io
                    email_verified_at: null
                    created_at: '2021-08-05T14:16:50.000000Z'
                    updated_at: '2021-08-05T14:19:28.000000Z'
                    allergies:
                      -
                        id: 1
                        name: 'Nut Allergy'
                        description: 'Allergic to nuts'
                        created_at: '2021-08-04T22:51:03.000000Z'
                        updated_at: '2021-08-04T22:51:03.000000Z'
                        pivot:
                          user_id: 3
                          allergy_id: 1
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'save user allergies successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 3
                      name: 'Idris Elba'
                      email: elba@onubrooks.io
                      email_verified_at: null
                      created_at: '2021-08-05T14:16:50.000000Z'
                      updated_at: '2021-08-05T14:19:28.000000Z'
                      allergies:
                        -
                          id: 1
                          name: 'Nut Allergy'
                          description: 'Allergic to nuts'
                          created_at: '2021-08-04T22:51:03.000000Z'
                          updated_at: '2021-08-04T22:51:03.000000Z'
                          pivot:
                            user_id: 3
                            allergy_id: 1
                    description: '''User-Allergies'' record just created or updated.'
      tags:
        - 'Data Relationship Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'Identifier of the item.'
                  example: 3
                allergies:
                  type: array
                  description: 'A list of allergies that are in the item.'
                  example:
                    -
                      allergy_id: 1
                  items:
                    type: object
      security: []
  '/api/meal-items/{meal_id}':
    get:
      summary: 'Fetch Meal-Items'
      description: "Fetch a list of all 'meal-items' in the recommender. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch meal-items successful'
                  data:
                    id: 1
                    name: 'Eba and Ewedu'
                    description: 'special eba from the western part of Nigeria'
                    created_at: '2021-08-04T22:40:03.000000Z'
                    updated_at: '2021-08-04T22:40:03.000000Z'
                    items:
                      -
                        id: 1
                        name: Ewedu
                        description: 'Ewedu soup'
                        pivot:
                          meal_id: 1
                          item_id: 1
                      -
                        id: 11
                        name: Eba
                        description: 'delicious swallow'
                        pivot:
                          meal_id: 1
                          item_id: 11
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch meal-items successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 1
                      name: 'Eba and Ewedu'
                      description: 'special eba from the western part of Nigeria'
                      created_at: '2021-08-04T22:40:03.000000Z'
                      updated_at: '2021-08-04T22:40:03.000000Z'
                      items:
                        -
                          id: 1
                          name: Ewedu
                          description: 'Ewedu soup'
                          pivot:
                            meal_id: 1
                            item_id: 1
                        -
                          id: 11
                          name: Eba
                          description: 'delicious swallow'
                          pivot:
                            meal_id: 1
                            item_id: 11
                    description: 'List of meal-items queried from the API.'
      tags:
        - 'Data Relationship Management'
      security: []
    parameters:
      -
        in: path
        name: meal_id
        description: 'The ID of the meal.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/item-allergies/{item_id}':
    get:
      summary: 'Fetch Item-Allergies'
      description: "Fetch a list of all 'item-allergies' in the recommender. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch item-allergies successful'
                  data:
                    id: 2
                    name: 'Pounded Yam'
                    description: 'Yam that is pounded'
                    created_at: '2021-08-04T22:45:30.000000Z'
                    updated_at: '2021-08-04T22:45:30.000000Z'
                    allergies:
                      -
                        id: 2
                        name: 'ShellFish Allergy'
                        description: 'Allergic to ShellFish'
                        pivot:
                          item_id: 2
                          allergy_id: 2
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch item-allergies successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 2
                      name: 'Pounded Yam'
                      description: 'Yam that is pounded'
                      created_at: '2021-08-04T22:45:30.000000Z'
                      updated_at: '2021-08-04T22:45:30.000000Z'
                      allergies:
                        -
                          id: 2
                          name: 'ShellFish Allergy'
                          description: 'Allergic to ShellFish'
                          pivot:
                            item_id: 2
                            allergy_id: 2
                    description: 'List of ''item-allergies'' queried from the API.'
      tags:
        - 'Data Relationship Management'
      security: []
    parameters:
      -
        in: path
        name: item_id
        description: 'The ID of the item.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/user-allergies/{user_id}':
    get:
      summary: 'Fetch User-Allergies'
      description: "Fetch a list of all 'user-allergies' in the recommender. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch user-allergies successful'
                  data:
                    id: 1
                    name: 'Brad Pitt'
                    email: pit@onubrooksapi.com
                    email_verified_at: null
                    created_at: '2021-08-04T22:55:02.000000Z'
                    updated_at: '2021-08-04T22:55:10.000000Z'
                    allergies:
                      -
                        id: 3
                        name: 'SeaFood Allergy'
                        description: 'Allergic to SeaFood'
                        created_at: '2021-08-04T22:51:36.000000Z'
                        updated_at: '2021-08-04T22:51:36.000000Z'
                        pivot:
                          user_id: 1
                          allergy_id: 3
                      -
                        id: 1
                        name: 'Nut Allergy'
                        description: 'Allergic to nuts'
                        created_at: '2021-08-04T22:51:03.000000Z'
                        updated_at: '2021-08-04T22:51:03.000000Z'
                        pivot:
                          user_id: 1
                          allergy_id: 1
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch user-allergies successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      id: 1
                      name: 'Brad Pitt'
                      email: pit@onubrooksapi.com
                      email_verified_at: null
                      created_at: '2021-08-04T22:55:02.000000Z'
                      updated_at: '2021-08-04T22:55:10.000000Z'
                      allergies:
                        -
                          id: 3
                          name: 'SeaFood Allergy'
                          description: 'Allergic to SeaFood'
                          created_at: '2021-08-04T22:51:36.000000Z'
                          updated_at: '2021-08-04T22:51:36.000000Z'
                          pivot:
                            user_id: 1
                            allergy_id: 3
                        -
                          id: 1
                          name: 'Nut Allergy'
                          description: 'Allergic to nuts'
                          created_at: '2021-08-04T22:51:03.000000Z'
                          updated_at: '2021-08-04T22:51:03.000000Z'
                          pivot:
                            user_id: 1
                            allergy_id: 1
                    description: 'List of ''user-allergies'' queried from the API.'
      tags:
        - 'Data Relationship Management'
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/recommend:
    post:
      summary: 'Fetch Multiple Users Recommendations'
      description: "Fetch all recommended meals for a list of users' based on their allergies. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch recommendations successful'
                  data:
                    -
                      user:
                        id: 1
                        name: 'Brad Pitt'
                        email: pit@onubrooksapi.com
                      recommended_meals:
                        -
                          id: 3
                          name: 'akpu and Ewedu'
                          description: 'special akpu from the eastern part of Nigeria'
                          items: []
                        -
                          id: 4
                          name: 'pounded yam and Ewedu'
                          description: 'special pounded yam from the southern part of Nigeria'
                          items: []
                        -
                          id: 5
                          name: 'Eba and Okra'
                          description: 'special garri cake with okra soup'
                          items: []
                        -
                          id: 6
                          name: 'Grilled Fish with Spice Chilli'
                          description: 'This is the description'
                          items: []
                    -
                      user:
                        id: 2
                        name: 'Harvey Specter'
                        email: harvey@onubrooksapi.com
                      recommended_meals:
                        -
                          id: 1
                          name: 'Eba and Ewedu'
                          description: 'special eba from the western part of Nigeria'
                          items:
                            -
                              id: 1
                              name: Ewedu
                              description: 'Ewedu soup'
                              pivot:
                                meal_id: 1
                                item_id: 1
                            -
                              id: 11
                              name: Eba
                              description: 'delicious swallow'
                              pivot:
                                meal_id: 1
                                item_id: 11
                        -
                          id: 3
                          name: 'akpu and Ewedu'
                          description: 'special akpu from the eastern part of Nigeria'
                          items: []
                        -
                          id: 4
                          name: 'pounded yam and Ewedu'
                          description: 'special pounded yam from the southern part of Nigeria'
                          items: []
                        -
                          id: 5
                          name: 'Eba and Okra'
                          description: 'special garri cake with okra soup'
                          items: []
                        -
                          id: 6
                          name: 'Grilled Fish with Spice Chilli'
                          description: 'This is the description'
                          items: []
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch recommendations successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: array
                    example:
                      -
                        user:
                          id: 1
                          name: 'Brad Pitt'
                          email: pit@onubrooksapi.com
                        recommended_meals:
                          -
                            id: 3
                            name: 'akpu and Ewedu'
                            description: 'special akpu from the eastern part of Nigeria'
                            items: []
                          -
                            id: 4
                            name: 'pounded yam and Ewedu'
                            description: 'special pounded yam from the southern part of Nigeria'
                            items: []
                          -
                            id: 5
                            name: 'Eba and Okra'
                            description: 'special garri cake with okra soup'
                            items: []
                          -
                            id: 6
                            name: 'Grilled Fish with Spice Chilli'
                            description: 'This is the description'
                            items: []
                      -
                        user:
                          id: 2
                          name: 'Harvey Specter'
                          email: harvey@onubrooksapi.com
                        recommended_meals:
                          -
                            id: 1
                            name: 'Eba and Ewedu'
                            description: 'special eba from the western part of Nigeria'
                            items:
                              -
                                id: 1
                                name: Ewedu
                                description: 'Ewedu soup'
                                pivot:
                                  meal_id: 1
                                  item_id: 1
                              -
                                id: 11
                                name: Eba
                                description: 'delicious swallow'
                                pivot:
                                  meal_id: 1
                                  item_id: 11
                          -
                            id: 3
                            name: 'akpu and Ewedu'
                            description: 'special akpu from the eastern part of Nigeria'
                            items: []
                          -
                            id: 4
                            name: 'pounded yam and Ewedu'
                            description: 'special pounded yam from the southern part of Nigeria'
                            items: []
                          -
                            id: 5
                            name: 'Eba and Okra'
                            description: 'special garri cake with okra soup'
                            items: []
                          -
                            id: 6
                            name: 'Grilled Fish with Spice Chilli'
                            description: 'This is the description'
                            items: []
                    description: 'List of recommended meals for each user.'
                    items:
                      type: object
      tags:
        - 'Meal Recommender'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: 'The list of IDs of users to fetch reccomendations.'
                  example:
                    - 1
                    - 2
                  items:
                    type: integer
              required:
                - users
      security: []
  /api/recommend/user:
    post:
      summary: 'Fetch User Recommendations'
      description: "Fetch a list of a given users' recommended meals based on their allergies. If everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with a 400 error, and an error field."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        400:
          description: '400, Service is down or an unexpected error occurred'
          content:
            text/plain:
              schema:
                type: string
                example: .
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'fetch recommendations successful'
                  data:
                    user:
                      id: 1
                      name: 'Brad Pitt'
                      email: pit@onubrooksapi.com
                    recommended_meals:
                      -
                        id: 3
                        name: 'akpu and Ewedu'
                        description: 'special akpu from the eastern part of Nigeria'
                        items: []
                      -
                        id: 4
                        name: 'pounded yam and Ewedu'
                        description: 'special pounded yam from the southern part of Nigeria'
                        items: []
                      -
                        id: 5
                        name: 'Eba and Okra'
                        description: 'special garri cake with okra soup'
                        items: []
                      -
                        id: 6
                        name: 'Grilled Fish with Spice Chilli'
                        description: 'This is the description'
                        items: []
                properties:
                  status:
                    type: string
                    example: success
                    description: 'The status of this API (`success` or `error`).'
                  message:
                    type: string
                    example: 'fetch recommendations successful'
                    description: 'The service message based on the status of the call.'
                  data:
                    type: object
                    example:
                      user:
                        id: 1
                        name: 'Brad Pitt'
                        email: pit@onubrooksapi.com
                      recommended_meals:
                        -
                          id: 3
                          name: 'akpu and Ewedu'
                          description: 'special akpu from the eastern part of Nigeria'
                          items: []
                        -
                          id: 4
                          name: 'pounded yam and Ewedu'
                          description: 'special pounded yam from the southern part of Nigeria'
                          items: []
                        -
                          id: 5
                          name: 'Eba and Okra'
                          description: 'special garri cake with okra soup'
                          items: []
                        -
                          id: 6
                          name: 'Grilled Fish with Spice Chilli'
                          description: 'This is the description'
                          items: []
                    description: 'List of users'' recommended meals.'
      tags:
        - 'Meal Recommender'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 1
              required:
                - user_id
      security: []
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
